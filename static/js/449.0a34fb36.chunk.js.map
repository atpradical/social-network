{"version":3,"file":"static/js/449.0a34fb36.chunk.js","mappings":"gNACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCGpMA,EAA4C,SAACC,GAEtD,IAAIC,EAAI,mBAAeD,EAAME,IAE7B,OAAO,gBAAKC,UAAWC,EAAW,IAAMA,EAAjC,UACH,SAAC,KAAD,CAASC,GAAIJ,EAAb,SAAoBD,EAAMM,UCNrBC,EAAsC,SAACP,GAChD,OACI,gBAAKG,UAAWC,EAAhB,SAA4BJ,EAAMQ,W,iDCCpCC,GAAcC,EAAAA,EAAAA,GAAiB,IAoBxBC,GAAsBC,EAAAA,EAAAA,GAA+B,CAACC,KAAM,wBAAtCD,EAlBgC,SAACZ,GAChE,OACI,kBAAMc,SAAUd,EAAMe,aAAtB,WACI,0BACI,SAACC,EAAA,EAAD,CACIV,KAAM,iBACNW,UAAWC,EAAAA,GACXC,YAAa,oBACbC,SAAU,CAACC,EAAAA,EAAeZ,QAGlC,0BACI,SAAC,IAAD,CAAQa,QAAStB,EAAMe,aAAvB,0BCEHQ,GAAmBC,EAAAA,EAAAA,KAA6BC,EAAAA,EAAAA,KAdrC,SAACC,GACrB,MAAO,CACHC,YAAaD,EAAMC,gBAIA,SAACC,GACxB,MAAO,CACHC,YAAa,SAACC,GACVF,GAASG,EAAAA,EAAAA,GAAeD,SAMXE,EAAAA,EADOR,ECfa,SAACxB,GAE1C,IAAM0B,EAAQ1B,EAAM2B,YAEdM,EAAkBP,EAAMQ,QAAQC,KAAI,SAAAC,GAAC,OACvC,SAACrC,EAAD,CAAuBO,KAAM8B,EAAE9B,KAAMJ,GAAIkC,EAAElC,IAA1BkC,EAAElC,OAEjBmC,EAAmBX,EAAMY,SAASH,KAAI,SAAAI,GAAC,OACzC,SAAChC,EAAD,CAAoBC,QAAS+B,EAAE/B,SAAjB+B,EAAErC,OAMpB,OACI,iBAAKC,UAAWC,EAAhB,WACI,gBAAKD,UAAWC,EAAhB,SACK6B,KAEL,iBAAK9B,UAAWC,EAAhB,WACI,yBAAMiC,KACN,SAAC1B,EAAD,CAAqBG,SAXX,SAAC0B,GACnBxC,EAAM6B,YAAYW,EAASC","sources":["webpack://samurai-way/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__dlIXi\",\"dialogsItems\":\"Dialogs_dialogsItems__QYdzs\",\"active\":\"Dialogs_active__crR-e\",\"dialog\":\"Dialogs_dialog__P4v1x\",\"messages\":\"Dialogs_messages__b6Qd0\",\"message\":\"Dialogs_message__4kSrj\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nexport const DialogItem: React.FC<DialogItemPropsType> = (props) => {\r\n\r\n    let path = `/dialogs/${props.id}`\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\n//types:\r\ntype DialogItemPropsType = {\r\n    name: string\r\n    id: number\r\n}","import React from 'react';\r\nimport s from './../Dialogs.module.css'\r\n\r\nexport const Message: React.FC<MessagePropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\n//types:\r\ntype MessagePropsType = {\r\n    message: string\r\n}","import React, {FC} from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../../Common/FormsControl/FromsControls\";\r\nimport {maxLengthCreator, requiredFiled} from \"../../../utils/validators/validators\";\r\nimport {Button} from \"antd\";\r\n\r\nconst maxLenght50 = maxLengthCreator(50)\r\n\r\nconst AddMessageForm: FC<InjectedFormProps<MessageFormDataType>> = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    name={'newMessageBody'}\r\n                    component={TextArea}\r\n                    placeholder={\"enter new message\"}\r\n                    validate={[requiredFiled, maxLenght50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Button onClick={props.handleSubmit}>Send</Button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport const AddMessageFormRedux = reduxForm<MessageFormDataType>({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\n//types:\r\nexport type MessageFormDataType = {\r\n    newMessageBody: string\r\n}","import {InitialStateType, sendNewMessage} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {Dialogs} from \"./Dialogs\";\r\nimport React from \"react\";\r\n\r\nconst mapStateToProps = (state: AppStateType): MapStateToPropsType => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch): MapDispatchToPropsType => {\r\n    return {\r\n        sendMessage: (newMessage: string) => {\r\n            dispatch(sendNewMessage(newMessage))\r\n        }\r\n    }\r\n}\r\n\r\nexport const DialogsContainer = compose<React.ComponentType>(connect(mapStateToProps,\r\n    mapDispatchToProps), withAuthRedirect)(Dialogs)\r\n\r\n//types:\r\ntype MapStateToPropsType = {\r\n    dialogsPage: InitialStateType\r\n}\r\ntype MapDispatchToPropsType = {\r\n    sendMessage: (newMessage: string) => void\r\n}\r\nexport type DialogsPropsType = MapStateToPropsType & MapDispatchToPropsType","import React, {FC} from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport {DialogItem} from \"./DialogItem/DialogItem\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {DialogsPropsType} from \"./DialogsContainer\";\r\nimport {AddMessageFormRedux, MessageFormDataType} from \"./AddMessageForm/AddMessageForm\";\r\n\r\nexport const Dialogs: FC<DialogsPropsType> = (props) => {\r\n\r\n    const state = props.dialogsPage\r\n\r\n    const dialogsElements = state.dialogs.map(d =>\r\n        <DialogItem key={d.id} name={d.name} id={d.id}/>)\r\n\r\n    const messagesElements = state.messages.map(m =>\r\n        <Message key={m.id} message={m.message}/>)\r\n\r\n    const addNewMessage = (formData: MessageFormDataType) => {\r\n        props.sendMessage(formData.newMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"names":["DialogItem","props","path","id","className","s","to","name","Message","message","maxLenght50","maxLengthCreator","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requiredFiled","onClick","DialogsContainer","compose","connect","state","dialogsPage","dispatch","sendMessage","newMessage","sendNewMessage","withAuthRedirect","dialogsElements","dialogs","map","d","messagesElements","messages","m","formData","newMessageBody"],"sourceRoot":""}